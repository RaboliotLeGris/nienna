version: "3.9"

services:
  db:
    build: ../../.docker/services/postgresql
    restart: unless-stopped
    ports: 
      - "1486:1486"
    environment:
      POSTGRES_DB: "nienna"
      POSTGRES_USER: "nienna"
      POSTGRES_PASSWORD: "nienna"
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    build: ../../.docker/services/redis
    restart: unless-stopped

  rabbitmq:
    build: ../../.docker/services/rabbitmq
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "nienna"
      RABBITMQ_DEFAULT_PASS: "nienna123"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  s3:
    build: ../../.docker/services/minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: "minio"
      MINIO_ROOT_PASSWORD: "minio123"
      MINIO_ACCESS_KEY: "47cd7dd52abc74f798c6f36a3ff2f6df0637431418c8f5373b31ce7a19d98183" # YES TODO: remove
      MINIO_SECRET_KEY: "20282d88b1979a53ac09caba531d57065f026b0b2a7f68f81ed4294cb9df6300" # YES TODO: remove
    command: server /home/shared
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - s3:/data

  cliff:
    build: ../../cliff
    restart: unless-stopped
    ports:
      - "80:8000"
    environment:
      DB_URI: "postgresql://db/nienna?user=nienna&password=nienna"
      REDIS_URI: "redis:6379"
      S3_URI: "s3:9000"
      S3_ACCESS_KEY: "minio"
      S3_SECRET_KEY: "minio123" # Yes
      RABBITMQ_URI: "amqp://nienna:nienna123@rabbitmq:5672"
      # If NIENNA_DEV is defined, debug logs are printed
      NIENNA_DEV: "true"
      SESSION_KEY: "95c5a0ae-6bd8-4866-81d3-6f67223f8ff2"
    depends_on:
      - db
      - redis
      - s3
      - rabbitmq

  backburner:
    build: ../../backburner
    restart: unless-stopped
    environment:
      RUST_LOG: "DEBUG"
      S3_URI: "http://s3:9000"
      S3_ACCESS_KEY: "minio"
      S3_SECRET_KEY: "minio123" # Yes
      RABBITMQ_URI: "amqp://nienna:nienna123@rabbitmq:5672"
    depends_on:
      - s3
      - rabbitmq

  pulsar:
    build: ../../pulsar
    restart: unless-stopped
    environment:
      LOG_LEVEL: "debug"
      DB_URI: "postgresql://db/nienna?user=nienna&password=nienna"
      AMQP_URI: "amqp://nienna:nienna123@rabbitmq:5672"
    depends_on:
      - rabbitmq
      - db

volumes:
  db:
  rabbitmq:
  s3: